import React from 'react';
import { useState, useRef, useEffect } from "react";
import Head from 'next/head'
import Image from 'next/image'
import Sidebar from '../../components/Sidebar';
import { useRouter } from "next/router";
import { useCollectionData, useDocumentData } from 'react-firebase-hooks/firestore';
import { addDoc, collection, doc, orderBy, query, serverTimestamp } from 'firebase/firestore';
import { auth, db } from '../../firebaseconfig';
import { useAuthState } from 'react-firebase-hooks/auth';
import getOtherEmail from '../../utils/getOtherEmail';
import urlify from '../../utils/urlify';
import timeStampConvert from '../../utils/timeStampConvert';
import imgify from '../../utils/imgify';
const Chat = () => {
    const [user] = useAuthState(auth);
    const router = useRouter();
    const { id } = router.query
    const q = query(collection(db, `chats/${id}/messages`), orderBy("timestamp"));
    const [messages] = useCollectionData(q);
    const [chat] = useDocumentData(doc(db, 'chats', id))
    const [input, setInput] = useState('')
    const bottomOfChat = useRef();
    const sendMessage = async (e) => {
        e.preventDefault()
        await addDoc(collection(db, `chats/${id}/messages`), {
            text: input,
            sender: user.email,
            timestamp: serverTimestamp()
        })
        setInput('')
    }

    useEffect(() =>{
        setTimeout(
            bottomOfChat.current.scrollIntoView({
                behavior: "smooth",
                block: 'start',
            }), 250)
        , [messages]})
    return (
        <div>
            <Head>
                <title>Chat App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main>
                <section className='chat-section'>
                    <Sidebar />
                    <div className="chat">
                        <div className="chat__head">
                            <div className="user">
                                <div className="user__icon">
                                    <Image src={'https://cdn-icons-png.flaticon.com/512/149/149071.png'} alt="user icon" layout='fill' />
                                </div>
                                <div className="user__info">
                                    <div className="user__email">{getOtherEmail(chat?.users, user)}</div>
                                </div>
                            </div>
                        </div>
                        <div className="chat__body">
                            {messages?.map(message => <Message key={Math.random()} text={message.text} timeStamp={message.timestamp?.seconds} className={message.sender == user.email ? 'is-sender' : ''} />)}
                            <div ref={bottomOfChat}></div>
                        </div>
                        <div className="chat__bottom">
                            <div className="form__group"><input type="text" placeholder="Type a message" className="form__input" value={input} onChange={e => setInput(e.target.value)} onKeyDown={e=>e.key=='Enter' && sendMessage(e)} /></div>
                            <button className="btn" type="submit" onClick={sendMessage}>Send</button>
                        </div>
                    </div>
                </section>
            </main>

            <footer>

            </footer>
        </div>
    );
};
const Message = ({ text, className, timeStamp=169000000}) => {
    return (
        <div className={`message ${className}`}>
            <div className="message__date">{(timeStampConvert(timeStamp).isToday? 'Сегодня': timeStampConvert(timeStamp).long) +' в '+ timeStampConvert(timeStamp).short }</div>
            <div className="message__bubble">
                { ( urlify(text) && imgify(text) ) ? <a href={ text.indexOf('https://')==0?text:'https://'+ text  } rel="noreferrer" target="_blank">{text}</a>: text}
                { ( imgify(text) ) && <img src={text} alt="" />}
            </div>       
        </div>
    )

}
export default Chat;